{"version":3,"sources":["components/Display.jsx","components/Timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","Math","floor","time","slice","Timer","useState","timeStart","setTime","timerOn","setTimerOn","useEffect","interval","setInterval","prevTime","clearInterval","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAEaA,EAAU,SAACC,GACpB,OACI,sBAAKC,UAAU,UAAf,UACI,oCACI,6BAAK,IAAMC,KAAKC,MAAOH,EAAMI,KAAO,IAAS,KAAKC,OAAO,KACzD,4BAAG,iDAEP,qCACA,oCACI,6BAAK,IAAMH,KAAKC,MAAOH,EAAMI,KAAO,IAAQ,KAAKC,OAAO,KACxD,4BAAG,iDAEP,qCACA,oCACI,6BAAK,IAAQL,EAAMI,KAAO,GAAM,KAAMC,OAAO,KAC7C,4BAAG,0DCdNC,EAAQ,SAACN,GAAW,IAAD,EACJO,mBAASP,EAAMQ,WADX,mBACrBJ,EADqB,KACfK,EADe,OAEEF,oBAAS,GAFX,mBAErBG,EAFqB,KAEZC,EAFY,KAmB5B,OAfAC,qBAAU,WACN,IAAIC,EAAW,KAUf,OARIH,EACAG,EAAWC,aAAY,WACnBL,GAAQ,SAACM,GAAD,OAAcA,EAAS,EAAEA,EAAW,GAAG,OAChD,MACKL,GAAWN,GAAQ,IAC3BY,cAAcH,GAGX,kBAAMG,cAAcH,MAC5B,CAACH,IAIA,yBAAST,UAAU,kBAAnB,SACI,0BAASA,UAAU,QAAnB,UACI,8BACI,mDAGJ,cAAC,EAAD,CAASG,KAAQA,IAEjB,sBAAKH,UAAU,UAAf,WACMS,GAAWN,IAASJ,EAAMQ,WACxB,wBAAQS,QAAS,kBAAMN,GAAW,IAAlC,mBAEHD,GAAW,wBAAQO,QAAS,kBAAMN,GAAW,IAAlC,mBACVD,GAAWN,EAAOJ,EAAMQ,WACtB,wBAAQS,QAAS,kBAAMR,EAAQT,EAAMQ,YAArC,oBAEFE,GAAWN,EAAOJ,EAAMQ,WACtB,wBAAQS,QAAS,kBAAMN,GAAW,IAAlC,6B,MC7BTO,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACI,cAAC,EAAD,CAAOO,UAAa,SCMbW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b5239ead.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Display = (props) => {\r\n    return(\r\n        <div className='display'>\r\n            <section>\r\n                <p>{(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)}</p>\r\n                <p><small>Minutes</small></p>\r\n            </section>\r\n            <span>:</span>\r\n            <section>\r\n                <p>{(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2)}</p>\r\n                <p><small>Seconds</small></p>\r\n            </section>\r\n            <span>:</span>\r\n            <section>\r\n                <p>{(\"0\" + ((props.time / 10) % 100)).slice(-2)}</p>\r\n                <p><small>Milliseconds</small></p>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {Display} from \"./Display\";\r\n\r\nexport const Timer = (props) => {\r\n    const [time, setTime] = useState(props.timeStart);\r\n    const [timerOn, setTimerOn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (timerOn) {\r\n            interval = setInterval(() => {\r\n                setTime((prevTime) => prevTime>0?prevTime - 10:0);\r\n            }, 10);\r\n        } else if (!timerOn || time <= 0) {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    }, [timerOn]);\r\n\r\n\r\n    return (\r\n        <section className=\"timer-container\">\r\n            <section className=\"timer\">\r\n                <div>\r\n                    <h2>Countdown timer</h2>\r\n                </div>\r\n\r\n                <Display time = {time}/>\r\n\r\n                <div className=\"buttons\">\r\n                    {!timerOn && time === props.timeStart && (\r\n                        <button onClick={() => setTimerOn(true)}>Start</button>\r\n                    )}\r\n                    {timerOn && <button onClick={() => setTimerOn(false)}>Stop</button>}\r\n                    {!timerOn && time < props.timeStart && (\r\n                        <button onClick={() => setTime(props.timeStart)}>Reset</button>\r\n                    )}\r\n                    {!timerOn && time < props.timeStart && (\r\n                        <button onClick={() => setTimerOn(true)}>Resume</button>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </section>\r\n    );\r\n}\r\n\r\n","import {Timer} from './components/Timer'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Timer timeStart = {60000}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}